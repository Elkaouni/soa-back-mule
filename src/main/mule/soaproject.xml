<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="afaff790-3284-4527-a3ce-46da6423354f" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="ade6cbcc-d55c-44e4-9632-e1374b5774fd" >
		<http:request-connection host="localhost" port="8081" />
	</http:request-config>
	<db:config name="MySQLConfig" doc:name="Database Config" doc:id="8ab3f4ed-bf94-4a0c-bc1d-3087ca22e59e" >
		<db:my-sql-connection host="localhost" port="3306" user="root" password="root" database="soa"/>
	</db:config>
	<flow name="findAllUsers" doc:id="44039b4b-02c1-4e18-9d09-86468c081a52" >
		<http:listener doc:name="Listener" doc:id="5f96d2aa-6e98-460b-8127-b3a98e774b52" config-ref="HTTP_Listener_config" path="/users"/>
		<db:select doc:name="getAllUsers" doc:id="6ec9ff91-3526-431c-9317-9c98cb7b074f" config-ref="MySQLConfig" >
			<db:sql ><![CDATA[select * from users]]></db:sql>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="9f039a36-b080-4090-8845-1619b118bd7e" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="b4c410a0-b003-40e2-9420-e9f6264f3753" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"id": payload[0].id,
	"nom": payload[0].nom,
	"prenom": payload[0].prenom,
	"email": payload[0].email,
	"pwd": payload[0].password,
	"role": payload[0].role
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="2854c9cc-56d5-41f9-bcee-5d7f5b058c39" message="#[payload]" />
	</flow>
	<flow name="findUserById" doc:id="f8b8e7d0-bea0-4db6-b85f-95b6c84b8338" >
		<http:listener doc:name="Listener" doc:id="e46b2707-fb58-41c3-ba4a-8f10080fd10d" config-ref="HTTP_Listener_config" path="/user/id"/>
		<db:select doc:name="find user by id" doc:id="048fc2db-3f3b-4386-aea8-a4e512d9b3fb" config-ref="MySQLConfig" >
			<db:sql ><![CDATA[select * from users where id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="9fcf0ae6-6767-4e31-9b95-32e399f68912" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="c7599d8d-ae43-417a-aa21-84a14495cacf" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"id": payload[0].id,
	"nom": payload[0].nom,
	"prenom": payload[0].prenom,
	"email": payload[0].email,
	"pwd": payload[0].password,
	"role": payload[0].role
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="c4dabe78-fabb-4ddc-bcdb-023136ae9af6" message="#[payload]" />
	</flow>
	<flow name="findUserByEmailPwd" doc:id="94ad5c74-ed0b-4027-b95c-2c9b8f7dfdff" >
		<http:listener doc:name="Listener" doc:id="5ae3b00e-ec87-459f-81ff-ade26b96e774" config-ref="HTTP_Listener_config" path="/user/email"/>
		<db:select doc:name="find user by email and pwd" doc:id="435a8602-e851-4689-a22f-9f91b73ca7a1" config-ref="MySQLConfig" >
			<db:sql ><![CDATA[select * from users where email = :email and password = :password]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"email": payload.email,
	"password": payload.password
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="ef977bc5-8d74-4ecc-b9a4-b9c4fc39df5e" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="36624d38-4f91-4b9c-b3a6-781b2722e7b9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"id": payload[0].id,
	"nom": payload[0].nom,
	"prenom": payload[0].prenom,
	"email": payload[0].email,
	"pwd": payload[0].password,
	"role": payload[0].role
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="55067989-6ab3-424c-a64c-df667b85f33a" message="#[payload]" />
	</flow>
	<flow name="insertUser" doc:id="f76ea005-e83f-480d-b918-a8663f1df47c">
		<http:listener doc:name="Listener" doc:id="00c8b0d4-ec32-4b13-922e-896180308a49" config-ref="HTTP_Listener_config" path="/user/add"/>
		<db:insert doc:name="Insert" doc:id="4bbd03fa-529e-4337-95fe-15a0eb19f91a" config-ref="MySQLConfig">
			<db:sql ><![CDATA[insert into users(nom, prenom, email, password, role) values 
(:nom, :prenom, :email, :password, :role)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
    "nom" : payload.nom,
    "prenom": payload.prenom,
    "email": payload.email,
    "password": payload.password,
    "role": payload.role
}]]]></db:input-parameters>
		</db:insert>
		<logger level="INFO" doc:name="Logger" doc:id="43fee0d5-57ee-44fd-a21c-29453d4a390f" message="payload"/>
	</flow>
	<flow name="updateUser" doc:id="8e973a24-ce52-423a-bdd0-099833fa90e6">
		<http:listener doc:name="updateUSer" doc:id="b2c9025a-9b5e-4ee2-87da-97e106aa084d" config-ref="HTTP_Listener_config" path="/user/update"/>
		<db:update doc:name="Update" doc:id="5ef46785-86dd-47c1-ad44-8f851218781a" config-ref="MySQLConfig">
			<db:sql ><![CDATA[update users set nom = :nom, 
prenom = :prenom, 
email = :email,  
password = :password,  
role = :role where id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
    "nom" : payload.nom,
    "prenom": payload.prenom,
    "email": payload.email,
    "password": payload.password,
    "role": payload.role
}]]]></db:input-parameters>
		</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="8218248e-c940-41f0-b01e-7e508c22c746" message="#[payload]"/>
	</flow>
	<flow name="deleteUser" doc:id="c8640772-6e8f-4d1c-9810-59ae9e859cc8">
		<http:listener doc:name="Listener" doc:id="8f621809-ed50-4d44-8aeb-d11d4f2c8be0" config-ref="HTTP_Listener_config" path="/user/delete"/>
		<db:delete doc:name="Delete" doc:id="916651e6-fba5-41e7-a073-40d11eed673e" config-ref="MySQLConfig">
			<db:sql ><![CDATA[delete from users where id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id" : payload.id
}]]]></db:input-parameters>
		</db:delete>
		<logger level="INFO" doc:name="Logger" doc:id="bf878e5a-e053-4f42-9eab-51b154d7a17a" message="#[payload]"/>
	</flow>
	<flow name="getAllProfessseurs" doc:id="d1541363-5dd0-4b0a-8a93-5426876158b5" >
		<http:listener doc:name="Listener" doc:id="80cd3618-981e-472d-ac43-6642af8f4922" config-ref="HTTP_Listener_config" path="/professeurs"/>
		<db:select doc:name="Select professeurs" doc:id="9f82a7cc-fe90-4db4-b6ea-8ae56c90a2ad" config-ref="MySQLConfig">
			<db:sql><![CDATA[select * from users where role = 'professeur']]></db:sql>
			<db:parameter-types />
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="e23a7f8d-fb89-4a06-88a2-f3b5b36290c5" message="#[payload]"/>
		<ee:transform doc:name="Transform Message" doc:id="95e3ce85-5823-4043-817b-5a6e04a851c2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"nom": payload[index].nom,
	"prenom": payload[index].prenom,
	"email": payload[index].email,
	"pwd": payload[index].password,
	"role": payload[index].role
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="TRACE" doc:name="Logger" doc:id="c18da995-4173-41e8-9ad6-c16ffcbcbdb7" message="#[payload]"/>
	</flow>
	<flow name="findProfesseurById" doc:id="2fd6ec25-b449-43f4-a2ba-dd8eac49a22b" >
		<http:listener doc:name="Listener" doc:id="eba9e9a0-5c17-472c-bb4c-5473d1405cf4" config-ref="HTTP_Listener_config" path="/professeurs/id" outputMimeType="application/json">
		</http:listener>
		<db:select doc:name="find professeur by id" doc:id="487ca91a-8d5f-4e4e-93fd-dc272e3200f5" config-ref="MySQLConfig">
			<db:sql ><![CDATA[select * from users where role = 'professeur' and id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="73a12f20-d7f4-4b8c-a133-fbc268df1b7d" message="#[payload]"/>
		<ee:transform doc:name="Transform Message" doc:id="71cab9e4-b4b5-4292-9fc8-5c176f63435f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"id": payload[0].id,
	"nom": payload[0].nom,
	"prenom": payload[0].prenom,
	"email": payload[0].email,
	"pwd": payload[0].password,
	"role": payload[0].role
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="8eb78366-2744-40c7-aca4-f0c99f1c4c7e" message="#[payload]"/>
	</flow>
	<flow name="getAllRegisseurs" doc:id="398e877f-8119-4fe6-a40a-6c08f7d68936">
		<http:listener doc:name="Listener" doc:id="2e177cb2-5e90-4a3a-a5d5-79b1bf09a3d5" config-ref="HTTP_Listener_config" path="/regisseurs" />
		<db:select doc:name="Select all regisseurs" doc:id="2468a414-0bef-4ba2-995a-7c65e2f404ec" config-ref="MySQLConfig">
			<db:sql><![CDATA[select * from users where role = 'regisseur']]></db:sql>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="bde665b0-b451-4118-89ce-c3d6f3519a68" message="#[payload]"/>
		<ee:transform doc:name="Transform Message" doc:id="6d6fcba8-7416-4604-912a-1a483c5d5439" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"nom": payload[index].nom,
	"prenom": payload[index].prenom,
	"email": payload[index].email,
	"pwd": payload[index].password,
	"role": payload[index].role
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="4c6347ac-7a28-4dd8-a984-ce61d4d3a55a" message="#[payload]" />
	</flow>
	<flow name="findRegisseurById" doc:id="e3eb26f2-0c96-4dd3-8213-48761ebff6fb" >
		<http:listener doc:name="Listener" doc:id="c9633f5c-5aef-4c3b-b1bb-8e8c14b95662" config-ref="HTTP_Listener_config" path="/regisseurs/id"/>
		<db:select doc:name="find regisseur by id" doc:id="100e3b38-322f-4f3c-9546-23e5d8885098" config-ref="MySQLConfig" >
			<db:sql ><![CDATA[select * from users where role = 'regisseur' and id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="5e0a015c-99c1-48d5-9371-073db153dff1" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="26645deb-3689-4ca2-9ddf-c8429642281c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"id": payload[0].id,
	"nom": payload[0].nom,
	"prenom": payload[0].prenom,
	"email": payload[0].email,
	"pwd": payload[0].password,
	"role": payload[0].role
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="8b9224f7-7dc9-4ff6-bf32-0418467de0cb" message="#[payload]" />
	</flow>
	<flow name="getAllChefImms" doc:id="f1e1f5cc-4937-4ed1-947f-d8baecac8ea3">
		<http:listener doc:name="Listener" doc:id="f7285b19-2b0b-4c0d-984e-5c476c2f8eb3" config-ref="HTTP_Listener_config" path="/chef-imm" />
		<db:select doc:name="Select all Chefs Immediats" doc:id="71a5b189-4034-4fa7-89a8-4a14424cadc0" config-ref="MySQLConfig">
			<db:sql><![CDATA[select * from users where role = 'chef imm']]></db:sql>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="81b976e0-c634-422d-9d00-da97491a32c9" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="afbe3162-dd23-4243-a386-6fe7a1602dee" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"nom": payload[index].nom,
	"prenom": payload[index].prenom,
	"email": payload[index].email,
	"pwd": payload[index].password,
	"role": payload[index].role
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="99712b0e-a1ab-422f-a10b-8844ed1c246b" message="#[payload]" />
	</flow>
	<flow name="findChefImmById" doc:id="2eee2db6-185a-418b-98a4-958457df486d">
		<http:listener doc:name="Listener" doc:id="8e5c7349-c2ba-40dd-97a1-24c8ae7ec2ca" config-ref="HTTP_Listener_config" path="/chef-imm/id" outputMimeType="application/json">
		</http:listener>
		<db:select doc:name="find chef immediat by id" doc:id="52b449b0-c3d5-41da-bb06-c200f3e9b73e" config-ref="MySQLConfig">
			<db:sql><![CDATA[select * from users where role = 'chef imm' and id = :id]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="4e109fe5-1da3-490f-8af2-94ea463c83cf" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="29e7d838-c4ac-4eca-9b48-2e7919868df1">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"id": payload[0].id,
	"nom": payload[0].nom,
	"prenom": payload[0].prenom,
	"email": payload[0].email,
	"pwd": payload[0].password,
	"role": payload[0].role
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="5b349544-11b0-4288-aca4-ef6162760cef" message="#[payload]" />
	</flow>
	<flow name="getAllAdministrations" doc:id="e211bf12-a9b5-497a-b65e-d727b50705f5">
		<http:listener doc:name="Listener" doc:id="ebb10eb5-6e6f-4703-8bcf-ffcefc12b48a" config-ref="HTTP_Listener_config" path="/admins" />
		<db:select doc:name="Select all admins" doc:id="9fcc69d2-d561-4e9c-830a-8830f4da9c61" config-ref="MySQLConfig">
			<db:sql><![CDATA[select * from users where role = 'admin']]></db:sql>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="e1d7f28d-f84f-4703-9cee-461e14f487a7" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="6712fe6a-a9f1-4834-8613-93429830e918" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"nom": payload[index].nom,
	"prenom": payload[index].prenom,
	"email": payload[index].email,
	"pwd": payload[index].password,
	"role": payload[index].role
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="5a04d215-e062-4b16-9da0-dc2b98000968" message="#[payload]" />
	</flow>
	<flow name="findAdminById" doc:id="b649809b-8c14-4e95-9845-592def10d62f" >
		<http:listener doc:name="Listener" doc:id="1dec873e-9c4e-4234-ac7c-bd2b9153d22f" config-ref="HTTP_Listener_config" path="/admins/id"/>
		<db:select doc:name="find admin by id" doc:id="76302190-d5f2-40d0-a77b-c0ef437d8c9d" config-ref="MySQLConfig" >
			<db:sql ><![CDATA[select * from users where role = 'admin' and id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="11c8aa04-0431-4591-96cd-7645213a917c" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="1dd4f704-6b3b-4890-bc9f-502bf170bad0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"id": payload[0].id,
	"nom": payload[0].nom,
	"prenom": payload[0].prenom,
	"email": payload[0].email,
	"pwd": payload[0].password,
	"role": payload[0].role
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="3aab7de3-f695-4fb5-b617-80ea8a41fdcf" message="#[payload]" />
	</flow>
	<flow name="getAllMissions" doc:id="4416ef8f-d438-4a7d-8545-1cee7f756d5f" >
		<http:listener doc:name="Listener" doc:id="5734c377-9b7f-42c9-95a0-a2573f4a261f" config-ref="HTTP_Listener_config" path="/missions"/>
		<db:select doc:name="Select all missions" doc:id="a2f0f47a-8a81-4d89-a663-dadd9f495993" config-ref="MySQLConfig">
			<db:sql><![CDATA[select d.id, u.id as id_professeur, u.nom, u.prenom, destination,
d.description, dateDepartPrevu, dateRetourPrevu , d.statut 
from demande_mission d join users u
on d.id_professeur = u.id
where u.role = 'professeur']]></db:sql>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="efd2f6bd-3f07-4fed-ba18-bc0c49629b63" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="7c225631-5077-459a-b4ae-6884753eca25" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"professeur": {
		"id":payload[index].id_professeur,
		"nom":payload[index].nom,
		"prenom":payload[index].prenom
	},
	"destination": payload[index].destination,
	"description": payload[index].description,
	"dateDepartPrevu": payload[index].dateDepartPrevu,
	"dateRetourPrevu": payload[index].dateRetourPrevu,
	"statut": payload[index].statut
	}
)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="6daff090-41c6-4a01-8742-bd9d6734da7e" message="#[payload]" />
	</flow>
	<flow name="getMissionById" doc:id="9ca1f062-3b46-4f3d-96b7-956a05421c82">
		<http:listener doc:name="Listener" doc:id="17d9f793-fe95-4901-8fd1-2ebfde6f5b45" config-ref="HTTP_Listener_config" path="/missions/id" />
		<db:select doc:name="find mission by id" doc:id="edf61684-93e4-4405-8b14-8174ef05ab1e" config-ref="MySQLConfig">
			<db:sql><![CDATA[select d.id, u.id as id_professeur, u.nom, u.prenom, destination,
d.description, dateDepartPrevu, dateRetourPrevu , d.statut 
from demande_mission d join users u
on d.id_professeur = u.id
where u.role = 'professeur'
and d.id = :id]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="23146f66-0017-4562-8950-e5bc59b1f753" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="068e10dd-ee20-4d8c-9a98-6e3de7c32816">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"id": payload[0].id,
	"professeur": {
		"id":payload[0].id_professeur,
		"nom":payload[0].nom,
		"prenom":payload[0].prenom
	},
	"destination": payload[0].destination,
	"description": payload[0].description,
	"dateDepartPrevu": payload[0].dateDepartPrevu,
	"dateRetourPrevu": payload[0].dateRetourPrevu,
	"statut": payload[0].statut
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="419cd723-6df3-4519-8da8-3edc01716183" message="#[payload]" />
	</flow>
	<flow name="findMissionsByProfesseurId" doc:id="549141c4-53f9-4d85-9ad9-b6d1fa633077" >
		<http:listener doc:name="Listener" doc:id="3443c617-123f-4cd7-921d-378bbf382452" config-ref="HTTP_Listener_config" path="/missions/professeur/id"/>
		<db:select doc:name="find missions by professor id" doc:id="adb469b3-7de3-4818-a4b4-2e364f8d5822" config-ref="MySQLConfig" >
			<db:sql ><![CDATA[select d.id, u.id as id_professeur, u.nom, u.prenom, destination,
d.description, dateDepartPrevu, dateRetourPrevu , d.statut 
from demande_mission d join users u
on d.id_professeur = u.id
where u.role = 'professeur'
and u.id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="8f69b761-d52e-43c7-bc68-4d16d254b2b8" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="b8588c64-d266-4504-9106-b14fcc30cc6e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"professeur": {
		"id":payload[index].id_professeur,
		"nom":payload[index].nom,
		"prenom":payload[index].prenom
	},
	"destination": payload[index].destination,
	"description": payload[index].description,
	"dateDepartPrevu": payload[index].dateDepartPrevu,
	"dateRetourPrevu": payload[index].dateRetourPrevu,
	"statut": payload[index].statut
	}
)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="f0c43332-d1e8-48e5-a6c9-0157cce280e3" message="#[payload]" />
	</flow>
	<flow name="insertMission" doc:id="5f1a63b7-662a-4f70-a439-8768f29bcc8b" >
		<http:listener doc:name="Listener" doc:id="66ca8958-9a4c-429d-90c0-740b8b12eb6b" config-ref="HTTP_Listener_config" path="/missions/add"/>
		<db:insert doc:name="Insert" doc:id="beff366e-0d60-4222-bddc-fc33f473c821" config-ref="MySQLConfig">
			<db:sql ><![CDATA[insert into demande_mission 
(id_professeur, 
    dateDepartPrevu, 
    dateRetourPrevu, 
    destination, 
    statut, 
    description, 
    dateDepartReel, 
    dateRetourReel, 
    statut_remboursementnt) 
values 
(:id_professeur, 
    :dateDepartPrevu, 
    :dateRetourPrevu, 
    :destination, 
    :statut, 
    :description, 
    :dateDepartReel, 
    :dateRetourReel, 
    :statut_remboursement
    ) ]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id" : payload.id , 
	"id_professeur" : payload.id_professeur , 
    "dateDepartPrevu" : payload.dateDepartPrevu , 
    "dateRetourPrevu" : payload.dateRetourPrevu , 
    "destination" : payload.destination , 
    "statut" : payload.statut,
    "description" : payload.description,
    "dateDepartReel" : payload.dateDepartReel,
    "dateRetourReel" : payload.dateRetourReel,
    "statut_remboursement" : payload.statut_remboursement
}]]]></db:input-parameters>
		</db:insert>
		<logger level="INFO" doc:name="Logger" doc:id="efbebcb4-9ce3-4ba1-bc1e-27a781281fee" message="#[payload]"/>
	</flow>
	<flow name="updateMission" doc:id="8c8317bc-6029-4fe1-9965-8b36d3cf4950" >
		<http:listener doc:name="Listener" doc:id="55eb9a0c-0a2b-405c-8911-a544951d0b13" config-ref="HTTP_Listener_config" path="/missions/update"/>
		<db:update doc:name="Update" doc:id="2c2bca83-b262-4383-900e-6e7f4be504b5" config-ref="MySQLConfig">
			<db:sql ><![CDATA[update demande_mission set
 and id_professeur = :id_professeur
 and dateDepartPrevu = :dateDepartPrevu
 and dateRetourPrevu = :dateRetourPrevu
 and destination = :destination
 and description = :description
 and dateDepartReel = :dateDepartReel
 and dateRetourReel = :dateRetourReel
 and statut_remboursement = :statut_remboursement
 and statut = :statut
    where id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id" : payload.id , 
	"id_professeur" : payload.id_professeur , 
    "dateDepartPrevu" : payload.dateDepartPrevu , 
    "dateRetourPrevu" : payload.dateRetourPrevu , 
    "destination" : payload.destination , 
    "statut" : payload.statut,
    "description" : payload.description,
    "dateDepartReel" : payload.dateDepartReel,
    "dateRetourReel" : payload.dateRetourReel,
    "statut_remboursement" : payload.statut_remboursement
}]]]></db:input-parameters>
		</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="22d33dbc-5799-4044-b9c1-2f3c6ecc06c5" message="#[payload]"/>
	</flow>
	<flow name="updateDateHeureRetourEffectiveMission" doc:id="d06d4738-909e-413c-ad86-fade71dc87dd" >
		<http:listener doc:name="Listener" doc:id="8ae0f41a-030e-4e62-9442-7e278fad01cc" config-ref="HTTP_Listener_config" path="/missions/update/retour"/>
		<db:update doc:name="Update" doc:id="fa5f4ef1-8739-478d-af09-42193b3a7c91" config-ref="MySQLConfig">
			<db:sql ><![CDATA[update demande_mission set dateRetourReel = :dateRetourReel
    where id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id" : payload.id , 
    "dateRetourReel" : payload.dateRetourReel
}]]]></db:input-parameters>
		</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="fe495e65-94a8-4385-88d6-05094e1d4480" message="#[payload]"/>
	</flow>
	<flow name="deleteMission" doc:id="427a2bed-3350-4b94-9365-66df2c194822" >
		<http:listener doc:name="Listener" doc:id="b825ee01-17b9-47c5-a157-abff99bc332f" config-ref="HTTP_Listener_config" path="/missions/delete"/>
		<db:delete doc:name="Delete" doc:id="11d86857-7f11-4414-aba1-2350b47c6073" config-ref="MySQLConfig">
			<db:sql ><![CDATA[delete from demande_mission where id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id" : payload.id
}]]]></db:input-parameters>
		</db:delete>
		<logger level="INFO" doc:name="Logger" doc:id="4f5384cf-e2d3-4e99-a3bf-c1caa93fe9b6" message="#[payload]"/>
	</flow>
	<flow name="valid1Mission" doc:id="d84d2c12-c794-4bdb-8fc6-ea8803cbf756" >
		<http:listener doc:name="Listener" doc:id="cc90ed73-13a5-41f5-8acc-82318ff0f0d5" config-ref="HTTP_Listener_config" path="/missions/chef-imm/validation"/>
		<db:update doc:name="Update" doc:id="f1674548-6f01-40bd-a2dc-3d7f39615ceb" config-ref="MySQLConfig">
			<db:sql ><![CDATA[update demande_mission set statut = :statut
where id = :id and statut = "pending"]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id" : payload.id ,
    "statut" : payload.statut
}]]]></db:input-parameters>
		</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="ee824acd-5b3b-40ca-8b8e-abdc6c12e8e9" message="#[payload]"/>
	</flow>
	<flow name="valid2Mission" doc:id="a3a69fc4-4e18-4946-b6f6-bfe99d6b0b3b" >
		<http:listener doc:name="Listener" doc:id="ed42e67b-8323-47c0-908b-f3983d7aab08" config-ref="HTTP_Listener_config" path="/missions/regisseur/validation"/>
		<db:update doc:name="Update" doc:id="7f0c4297-a2d1-425a-bfd3-4bf3e047ad4f" config-ref="MySQLConfig">
			<db:sql ><![CDATA[update demande_mission set statut = :statut
where id = :id and statut = "valid1"]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id" : payload.id ,
    "statut" : payload.statut
}]]]></db:input-parameters>
		</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="b550e98d-6564-4eda-902a-8fab61c9bec6" message="#[payload]"/>
	</flow>
	<flow name="insertTransport" doc:id="59377230-26f2-439a-b1e5-ed024db75c33" >
		<http:listener doc:name="Listener" doc:id="23e206f2-f20c-4a3d-a7e7-ef13f31667b0" config-ref="HTTP_Listener_config" path="/missions/add/transport"/>
		<db:insert doc:name="Insert" doc:id="81fa1b68-8df8-48ac-9279-6596f2004489" config-ref="MySQLConfig">
			<db:sql ><![CDATA[insert into 
      transport (
        code_mission, 
        type_transport, 
        frais, 
        nbr_passager
      )
    values
      (
        :code_mission, 
        :type_transport, 
        :frais, 
        :nbr_passager
      );]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"code_mission" : payload.code_mission,
  "type_transport" : payload.type_transport, 
   "frais" : payload.frais, 
    "nbr_passager" : payload.nbr_passager
}]]]></db:input-parameters>
		</db:insert>
		<logger level="INFO" doc:name="Logger" doc:id="dca48e62-558f-4243-b34c-85eeae102daa" message="#[payload]"/>
	</flow>
	<flow name="getAllRemboursement" doc:id="3711c866-b8d7-4cbf-954b-7ccb00aaf292" >
		<http:listener doc:name="Listener" doc:id="63244132-25cd-41fb-bbd2-4bc19b16cd75" config-ref="HTTP_Listener_config" path="/remboursements" />
		<db:select doc:name="Select all remboursement" doc:id="50395f40-782a-4196-9596-cf237840409f" config-ref="MySQLConfig" >
			<db:sql ><![CDATA[select d.id, d.code_mission, u.id as id_professeur, u.nom, u.prenom, frais, 
budgetInitial, montantRembourse, validationFrais, validation, statut
from demande_remboursement d join users u
on d.id = u.id
where u.role = 'professeur']]></db:sql>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="7137c508-e586-403b-ac9a-a20c9319ce77" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="de7764f9-3fb1-4dfd-9b0a-5cdd5f864931" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"code_mission": payload[index].code_mission,
	"professeur": {
		"id":payload[index].id_professeur,
		"nom":payload[index].nom,
		"prenom":payload[index].prenom
	},
	"frais": payload[index].frais,
	"budgetInitial": payload[index].budgetInitial,
	"montantRembourse": payload[index].montantRembourse,
	"validationFrais": payload[index].validationFrais,
	"validation": payload[index].validation,
	"statut": payload[index].statut
	}
)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="6fe6093a-bcdb-4a0f-889e-1eabd0631d5a" message="#[payload]" />
	</flow>
	<flow name="getRemboursementById" doc:id="76ca119d-28b9-4bf8-b70a-359a75043417" >
		<http:listener doc:name="Listener" doc:id="c328049c-c6be-4832-adad-eb86af1f58a2" config-ref="HTTP_Listener_config" path="/remboursements/id" />
		<db:select doc:name="find remboursement by id" doc:id="d8df9275-080d-4923-b9b2-81da2b27dc7e" config-ref="MySQLConfig" >
			<db:sql ><![CDATA[select d.id, d.code_mission, u.id as id_professeur, u.nom, u.prenom, frais, 
budgetInitial, montantRembourse, validationFrais, validation, statut
from demande_remboursement d join users u
on d.id = u.id
where u.role = 'professeur'
and d.id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="d1b0b3d9-7f6f-4884-a300-6b9029e3c50d" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="d8add408-d7f1-4055-9e44-c047598b86a7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"id": payload[0].id,
	"code_mission": payload[0].code_mission,
	"professeur": {
		"id":payload[0].id_professeur,
		"nom":payload[0].nom,
		"prenom":payload[0].prenom
	},
	"frais": payload[0].frais,
	"budgetInitial": payload[0].budgetInitial,
	"montantRembourse": payload[0].montantRembourse,
	"validationFrais": payload[0].validationFrais,
	"validation": payload[0].validation,
	"statut": payload[0].statut
}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="77ca55e4-482e-4e1f-95d6-71eeb50571a9" message="#[payload]" />
	</flow>
	<flow name="findRemboursementsByProfesseurId" doc:id="b4481feb-a09f-40ac-84db-8d9f6e5aeea7" >
		<http:listener doc:name="Listener" doc:id="db3acdcc-1038-4c42-883f-acff8881632a" config-ref="HTTP_Listener_config" path="/remboursements/professeur/id" />
		<db:select doc:name="find remboursements by professor id" doc:id="cda10ba4-1900-4934-bba4-ef08336ed2b4" config-ref="MySQLConfig" >
			<db:sql ><![CDATA[select d.id, d.code_mission, u.id as id_professeur, u.nom, u.prenom, frais, 
budgetInitial, montantRembourse, validationFrais, validation, statut
from demande_remboursement d join users u
on d.id = u.id
where u.role = 'professeur'
and u.id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="a86bba1f-48e0-4ab3-ad8a-be83fe282d2b" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="73740742-cbbc-4d5c-a320-83984eea18c6" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"code_mission": payload[index].code_mission,
	"professeur": {
		"id":payload[index].id_professeur,
		"nom":payload[index].nom,
		"prenom":payload[index].prenom
	},
	"frais": payload[index].frais,
	"budgetInitial": payload[index].budgetInitial,
	"montantRembourse": payload[index].montantRembourse,
	"validationFrais": payload[index].validationFrais,
	"validation": payload[index].validation,
	"statut": payload[index].statut
	}
)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="afd8f048-bdb9-4435-ab8c-f204e780a6d1" message="#[payload]" />
	</flow>
	<flow name="findRemboursementsByMissionId" doc:id="9c5e4d20-19ac-41d0-9ac1-b55eb2c2f75a" >
		<http:listener doc:name="Listener" doc:id="774720fe-0f7c-41d9-9b27-0dc661c2c106" config-ref="HTTP_Listener_config" path="/remboursements/mission/id" />
		<db:select doc:name="find remboursement by mission id" doc:id="835c6753-4839-4862-9f31-d381fc152ac3" config-ref="MySQLConfig" >
			<db:sql ><![CDATA[select d.id, d.code_mission, u.id as id_professeur, u.nom, u.prenom, frais, 
budgetInitial, montantRembourse, validationFrais, validation, statut
from demande_remboursement d join users u
on d.id = u.id
where u.role = 'professeur'
and d.code_mission = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="a8bde3ee-9597-4dce-ae3f-f82518223d7e" message="#[payload]" />
		<ee:transform doc:name="Transform Message" doc:id="d79e2a0b-54f0-494e-9f7e-223a94c60deb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"professeur": {
		"id":payload[index].id_professeur,
		"nom":payload[index].nom,
		"prenom":payload[index].prenom
	},
	"destination": payload[index].destination,
	"description": payload[index].description,
	"dateDepartPrevu": payload[index].dateDepartPrevu,
	"dateRetourPrevu": payload[index].dateRetourPrevu,
	"statut": payload[index].statut
	}
)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="8d18a59a-5dab-45b1-9321-b1e5c3ab2e46" message="#[payload]" />
	</flow>
	<flow name="insertRemboursement" doc:id="ecad4086-3ff1-4be5-a932-18470cfedd20">
		<http:listener doc:name="Listener" doc:id="48184863-4ee6-4ae4-83e7-6bb8036e0b5d" config-ref="HTTP_Listener_config" path="/remboursements/add"/>
		<db:insert doc:name="Insert" doc:id="e215dba9-4b43-4f63-9f55-26f723361834" config-ref="MySQLConfig">
			<db:sql ><![CDATA[insert into 
  demande_remboursement (
    code_mission, 
    id_demandeur, 
    frais, 
    budgetInitial, 
    montantRembourse, 
    validationFrais, 
    validation, 
    statut
  )
values
  (
    :code_mission, 
    :id_demandeur, 
    :frais, 
    :budgetInitial, 
    :montantRembourse, 
    :validationFrais, 
    :validation, 
    :statut
  );]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	 "code_mission": payload.code_mission,
        "id_demandeur": payload.id_demandeur, 
        "frais": payload.frais, 
        "budgetInitial": payload.budgetInitial, 
        "montantRembourse": payload.montantRembourse, 
        "validationFrais": payload.validationFrais, 
        "validation": payload.validation, 
        "statut" : payload.statut
}]]]></db:input-parameters>
		</db:insert>
		<logger level="INFO" doc:name="Logger" doc:id="611da544-0227-450d-a103-45931b522928" />
	</flow>
	<flow name="updateRemboursement" doc:id="4c5a038e-0a87-439c-8f3d-d68d49e6f8eb" >
		<http:listener doc:name="Listener" doc:id="9789e42e-0606-4339-9f2d-e7f5ffd508d1" config-ref="HTTP_Listener_config" path="/remboursements/update"/>
		<db:update doc:name="Update" doc:id="2669e117-2348-459c-b835-3bf045c3cc77" config-ref="MySQLConfig">
			<db:sql ><![CDATA[update 
    demande_remboursement 
  set 
    code_mission = :code_mission,
    id_demandeur = :id_demandeur,
    frais = :frais,
    budgetInitial = :budgetInitial,
    montantRembourse = :montantRembourse,
    validationFrais = :validationFrais,
    validation = :validation,
    statut = :statut
  where 
    id = :id;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	 "id": payload.id,
	 "code_mission": payload.code_mission,
        "id_demandeur": payload.id_demandeur, 
        "frais": payload.frais, 
        "budgetInitial": payload.budgetInitial, 
        "montantRembourse": payload.montantRembourse, 
        "validationFrais": payload.validationFrais, 
        "validation": payload.validation, 
        "statut" : payload.statut
}]]]></db:input-parameters>
		</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="ee4f4f2a-e275-44bb-a0b2-dcc9db1be9e0" />
	</flow>
	<flow name="updateEtatRemboursement" doc:id="ac4b3878-c372-4cd8-bc7a-acdb6a59cd21" >
		<http:listener doc:name="Listener" doc:id="c77e66b8-57a5-4c81-819d-c3ee7228c9c7" config-ref="HTTP_Listener_config" path="/remboursements/update/etat"/>
		<db:update doc:name="Update" doc:id="b5a8293e-9c22-4f15-8ee3-61caab05fb95" config-ref="MySQLConfig">
			<db:sql ><![CDATA[update 
    demande_remboursement 
  set 
    statut = :statut
  where 
    id = :id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{		
	"id": payload.id,
    "statut" : payload.statut
 }]]]></db:input-parameters>
		</db:update>
		<logger level="INFO" doc:name="Logger" doc:id="3667dd4d-8f59-42af-965c-49ceb40fa21b" />
	</flow>
	<flow name="deleteRemboursement" doc:id="ece2f1e3-5f18-4f3b-9bdc-2ac2bf50b870" >
		<http:listener doc:name="Listener" doc:id="d36e8926-8f0b-4724-8dc8-5b24849c1f0d" config-ref="HTTP_Listener_config" path="/remboursements/delete"/>
		<db:delete doc:name="Delete" doc:id="c07e8d14-bc88-4253-9142-194560112e94" config-ref="MySQLConfig">
			<db:sql ><![CDATA[delete from 
  demande_remboursement 
where 
  id = :id;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"id": payload.id
}]]]></db:input-parameters>
		</db:delete>
		<logger level="INFO" doc:name="Logger" doc:id="98ad43ce-100d-46e0-a287-8c9569638144" />
	</flow>
	<flow name="findMissionNonRemboursee" doc:id="d1c17ce4-6779-41db-afee-e9ffeacbf547" >
		<http:listener doc:name="Listener" doc:id="a649c2bc-00c8-4e92-bd32-44d4fbbcc897" config-ref="HTTP_Listener_config" path="/missions/non-rembourse"/>
		<db:select doc:name="Select" doc:id="bae9ec68-ffe5-4644-92e6-47100338dd3d" config-ref="MySQLConfig">
			<db:sql ><![CDATA[select d.id, u.id as id_professeur, u.nom, u.prenom, destination,
d.description, dateDepartPrevu, dateRetourPrevu , d.statut 
from demande_mission d join users u
on d.id_professeur = u.id
join demande_remboursement dr on d.id = dr.code_mission
where u.role = 'professeur'
and dr.statut = 'annule']]></db:sql>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="5106efd0-070a-46f6-a970-79f0a98db39c" />
		<ee:transform doc:name="Transform Message" doc:id="aa3b5c4a-a539-4232-929d-895204daa6de" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"professeur": {
		"id":payload[index].id_professeur,
		"nom":payload[index].nom,
		"prenom":payload[index].prenom
	},
	"destination": payload[index].destination,
	"description": payload[index].description,
	"dateDepartPrevu": payload[index].dateDepartPrevu,
	"dateRetourPrevu": payload[index].dateRetourPrevu,
	"statut": payload[index].statut
	}
)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="02a76372-45e3-4083-9c16-817ca54eaf3e" />
	</flow>
	<flow name="findMissionNonRembourseePending" doc:id="069260fa-f8eb-4571-8c86-db1cfbc956a7">
		<http:listener doc:name="Listener" doc:id="9de35d39-3a08-4a5b-a5a7-fcc9e4fc64b5" config-ref="HTTP_Listener_config" path="/missions/non-rembourse/pending" />
		<db:select doc:name="Select" doc:id="f799eacb-7fd3-41ed-a51f-0523ccfca9a0" config-ref="MySQLConfig">
			<db:sql><![CDATA[select d.id, u.id as id_professeur, u.nom, u.prenom, destination,
d.description, dateDepartPrevu, dateRetourPrevu , d.statut 
from demande_mission d join users u
on d.id_professeur = u.id
join demande_remboursement dr on d.id = dr.code_mission
where u.role = 'professeur'
and dr.statut = 'pending']]></db:sql>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="72aae077-7bbe-447a-969e-c1ede3816220" />
		<ee:transform doc:name="Transform Message" doc:id="adea6f76-e58d-4d45-b991-40f6d527dd96">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map((item, index) -> {
	"id": payload[index].id,
	"professeur": {
		"id":payload[index].id_professeur,
		"nom":payload[index].nom,
		"prenom":payload[index].prenom
	},
	"destination": payload[index].destination,
	"description": payload[index].description,
	"dateDepartPrevu": payload[index].dateDepartPrevu,
	"dateRetourPrevu": payload[index].dateRetourPrevu,
	"statut": payload[index].statut
	}
)
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger1" doc:id="5a95fc86-5071-439a-90ce-ae5091dfc72e" />
	</flow>
	<flow name="calculerNombreTaux" doc:id="a657f76a-32f2-4e88-b07a-45faba182e82" >
		<http:listener doc:name="Listener" doc:id="585e58d9-6e43-4a30-88b0-8b4be608cade" config-ref="HTTP_Listener_config" path="/taux"/>
		<db:stored-procedure doc:name="Stored procedure" doc:id="53d066ac-4f93-425a-b938-42659bdcade7" config-ref="MySQLConfig">
			<db:sql ><![CDATA[CREATE PROCEDURE calculerNombreTaux(IN mission_id INT)
BEGIN
  DECLARE nombre_total INT;
  DECLARE nombre_reussi INT;
  DECLARE taux DECIMAL(5,2);
  
  --SELECT COUNT(*) INTO nombre_total FROM demande_mission WHERE id = mission_id;
  --SELECT COUNT(*) INTO nombre_reussi FROM demande_mission WHERE id = mission_id AND status = 'valide';
  
  SET taux = (nombre_reussi / nombre_total) * 100;
  
  SELECT taux AS 'Taux de réussite de la mission';
END]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	
}]]]></db:input-parameters>
		</db:stored-procedure>
		<logger level="INFO" doc:name="Logger" doc:id="50acdb99-6d6f-46ee-950d-3d297073c8b7" />
	</flow>
</mule>
